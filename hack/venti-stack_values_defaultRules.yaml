# This file is generated by `make alertrules`
venti:
  config:
    alertRules:
      defaultRules:
        enabled: true
        kubernetes:
          enabled: true
          rules:
            k01:
              alert: k01-KubernetesNodeNotReady
              enabled: true
              expr: kube_node_status_condition{condition="Ready",status="true"} == 0
              for: 10m
              severity: critical
              summary: Kubernetes Node ready (node {{ $labels.node }})
            k02:
              alert: k02-KubernetesNodeMemoryPressure
              enabled: true
              expr: kube_node_status_condition{condition="MemoryPressure",status="true"} == 1
              for: 2m
              severity: critical
              summary: Kubernetes memory pressure (node {{ $labels.node }})
            k03:
              alert: k03-KubernetesNodeDiskPressure
              enabled: true
              expr: kube_node_status_condition{condition="DiskPressure",status="true"} == 1
              for: 2m
              severity: critical
              summary: Kubernetes disk pressure (node {{ $labels.node }})
            k04:
              alert: k04-KubernetesNodeNetworkUnavailable
              enabled: true
              expr: kube_node_status_condition{condition="NetworkUnavailable",status="true"} == 1
              for: 2m
              severity: critical
              summary: Kubernetes Node network unavailable (instance {{ $labels.instance }})
            k05:
              alert: k05-KubernetesNodeOutOfPodCapacity
              enabled: true
              expr: sum by (node) ((kube_pod_status_phase{phase="Running"} == 1) + on(uid, instance) group_left(node) (0 * kube_pod_info{pod_template_hash=""})) / sum by (node) (kube_node_status_allocatable{resource="pods"}) * 100 > 90
              for: 2m
              severity: warning
              summary: Kubernetes Node out of pod capacity (instance {{ $labels.instance }})
            k06:
              alert: k06-KubernetesContainerOomKiller
              enabled: true
              expr: (kube_pod_container_status_restarts_total - kube_pod_container_status_restarts_total offset 10m >= 1) and ignoring (reason) min_over_time(kube_pod_container_status_last_terminated_reason{reason="OOMKilled"}[10m]) == 1
              for: 0m
              severity: warning
              summary: Kubernetes container oom killer ({{ $labels.namespace }}/{{ $labels.pod }}:{{ $labels.container }})
            k07:
              alert: k07-KubernetesJobFailed
              enabled: true
              expr: kube_job_status_failed > 0
              for: 0m
              severity: warning
              summary: Kubernetes Job failed ({{ $labels.namespace }}/{{ $labels.job_name }})
            k08:
              alert: k08-KubernetesJobNotStarting
              enabled: true
              expr: kube_job_status_active == 0 and kube_job_status_failed == 0 and kube_job_status_succeeded == 0 and (time() - kube_job_status_start_time) > 600
              for: 0m
              severity: warning
              summary: Kubernetes Job not starting ({{ $labels.namespace }}/{{ $labels.job_name }})
            k09:
              alert: k09-KubernetesCronjobSuspended
              enabled: true
              expr: kube_cronjob_spec_suspend != 0
              for: 0m
              severity: warning
              summary: Kubernetes CronJob suspended ({{ $labels.namespace }}/{{ $labels.cronjob }})
            k10:
              alert: k10-KubernetesPersistentvolumeclaimPending
              enabled: true
              expr: kube_persistentvolumeclaim_status_phase{phase="Pending"} == 1
              for: 2m
              severity: warning
              summary: Kubernetes PersistentVolumeClaim pending ({{ $labels.namespace }}/{{ $labels.persistentvolumeclaim }})
            k11:
              alert: k11-KubernetesVolumeOutOfDiskSpace
              enabled: true
              expr: kubelet_volume_stats_available_bytes / kubelet_volume_stats_capacity_bytes * 100 < 10
              for: 2m
              severity: warning
              summary: Kubernetes Volume out of disk space (instance {{ $labels.instance }})
            k12:
              alert: k12-KubernetesVolumeFullInFourDays
              enabled: false
              expr: predict_linear(kubelet_volume_stats_available_bytes[6h:5m], 4 * 24 * 3600) < 0
              for: 0m
              severity: critical
              summary: Kubernetes Volume full in four days (instance {{ $labels.instance }})
            k13:
              alert: k13-KubernetesPersistentvolumeError
              enabled: true
              expr: kube_persistentvolume_status_phase{phase=~"Failed|Pending", job="kube-state-metrics"} > 0
              for: 0m
              severity: critical
              summary: Kubernetes PersistentVolumeClaim pending ({{ $labels.namespace }}/{{ $labels.persistentvolumeclaim }})
            k14:
              alert: k14-KubernetesStatefulsetDown
              enabled: true
              expr: kube_statefulset_replicas != kube_statefulset_status_replicas_ready > 0
              for: 1m
              severity: critical
              summary: Kubernetes StatefulSet down ({{ $labels.namespace }}/{{ $labels.statefulset }})
            k15:
              alert: k15-KubernetesHpaScaleInability
              enabled: true
              expr: (kube_horizontalpodautoscaler_spec_max_replicas - kube_horizontalpodautoscaler_status_desired_replicas) * on (horizontalpodautoscaler,namespace) (kube_horizontalpodautoscaler_status_condition{condition="ScalingLimited", status="true"} == 1) == 0
              for: 2m
              severity: warning
              summary: Kubernetes HPA scale inability (instance {{ $labels.instance }})
            k16:
              alert: k16-KubernetesHpaMetricsUnavailability
              enabled: true
              expr: kube_horizontalpodautoscaler_status_condition{status="false", condition="ScalingActive"} == 1
              for: 0m
              severity: warning
              summary: Kubernetes HPA metrics unavailability (instance {{ $labels.instance }})
            k17:
              alert: k17-KubernetesHpaScaleMaximum
              enabled: true
              expr: (kube_horizontalpodautoscaler_status_desired_replicas >= kube_horizontalpodautoscaler_spec_max_replicas) and (kube_horizontalpodautoscaler_spec_max_replicas > 1) and (kube_horizontalpodautoscaler_spec_min_replicas != kube_horizontalpodautoscaler_spec_max_replicas)
              for: 2m
              severity: info
              summary: Kubernetes HPA scale maximum (instance {{ $labels.instance }})
            k18:
              alert: k18-KubernetesHpaUnderutilized
              enabled: true
              expr: max(quantile_over_time(0.5, kube_horizontalpodautoscaler_status_desired_replicas[1d]) == kube_horizontalpodautoscaler_spec_min_replicas) by (horizontalpodautoscaler) > 3
              for: 0m
              severity: info
              summary: Kubernetes HPA underutilized (instance {{ $labels.instance }})
            k19:
              alert: k19-KubernetesPodNotHealthy
              enabled: true
              expr: sum by (namespace, pod) (kube_pod_status_phase{phase=~"Pending|Unknown|Failed"}) > 0
              for: 15m
              severity: critical
              summary: Kubernetes Pod not healthy ({{ $labels.namespace }}/{{ $labels.pod }})
            k20:
              alert: k20-KubernetesPodCrashLooping
              enabled: true
              expr: increase(kube_pod_container_status_restarts_total[1m]) > 3
              for: 2m
              severity: warning
              summary: Kubernetes pod crash looping ({{ $labels.namespace }}/{{ $labels.pod }})
            k21:
              alert: k21-KubernetesReplicasetReplicasMismatch
              enabled: true
              expr: kube_replicaset_spec_replicas != kube_replicaset_status_ready_replicas
              for: 10m
              severity: warning
              summary: Kubernetes ReplicasSet mismatch ({{ $labels.namespace }}/{{ $labels.replicaset }})
            k22:
              alert: k22-KubernetesDeploymentReplicasMismatch
              enabled: true
              expr: kube_deployment_spec_replicas != kube_deployment_status_replicas_available
              for: 10m
              severity: warning
              summary: Kubernetes Deployment replicas mismatch ({{ $labels.namespace }}/{{ $labels.deployment }})
            k23:
              alert: k23-KubernetesStatefulsetReplicasMismatch
              enabled: true
              expr: kube_statefulset_status_replicas_ready != kube_statefulset_status_replicas
              for: 10m
              severity: warning
              summary: Kubernetes StatefulSet replicas mismatch (instance {{ $labels.instance }})
            k24:
              alert: k24-KubernetesDeploymentGenerationMismatch
              enabled: true
              expr: kube_deployment_status_observed_generation != kube_deployment_metadata_generation
              for: 10m
              severity: critical
              summary: Kubernetes Deployment generation mismatch ({{ $labels.namespace }}/{{ $labels.deployment }})
            k25:
              alert: k25-KubernetesStatefulsetGenerationMismatch
              enabled: true
              expr: kube_statefulset_status_observed_generation != kube_statefulset_metadata_generation
              for: 10m
              severity: critical
              summary: Kubernetes StatefulSet generation mismatch ({{ $labels.namespace }}/{{ $labels.statefulset }})
            k26:
              alert: k26-KubernetesStatefulsetUpdateNotRolledOut
              enabled: true
              expr: max without (revision) (kube_statefulset_status_current_revision unless kube_statefulset_status_update_revision) * (kube_statefulset_replicas != kube_statefulset_status_replicas_updated)
              for: 10m
              severity: warning
              summary: Kubernetes StatefulSet update not rolled out ({{ $labels.namespace }}/{{ $labels.statefulset }})
            k27:
              alert: k27-KubernetesDaemonsetRolloutStuck
              enabled: true
              expr: kube_daemonset_status_number_ready / kube_daemonset_status_desired_number_scheduled * 100 < 100 or kube_daemonset_status_desired_number_scheduled - kube_daemonset_status_current_number_scheduled > 0
              for: 10m
              severity: warning
              summary: Kubernetes DaemonSet rollout stuck ({{ $labels.namespace }}/{{ $labels.daemonset }})
            k28:
              alert: k28-KubernetesDaemonsetMisscheduled
              enabled: true
              expr: kube_daemonset_status_number_misscheduled > 0
              for: 1m
              severity: critical
              summary: Kubernetes DaemonSet misscheduled ({{ $labels.namespace }}/{{ $labels.daemonset }})
            k29:
              alert: k29-KubernetesCronjobTooLong
              enabled: true
              expr: time() - kube_cronjob_next_schedule_time > 3600
              for: 0m
              severity: warning
              summary: Kubernetes CronJob too long ({{ $labels.namespace }}/{{ $labels.cronjob }})
            k30:
              alert: k30-KubernetesJobSlowCompletion
              enabled: true
              expr: kube_job_spec_completions - kube_job_status_succeeded - kube_job_status_failed > 0
              for: 12h
              severity: critical
              summary: Kubernetes job slow completion ({{ $labels.namespace }}/{{ $labels.job_name }})
            k31:
              alert: k31-KubernetesApiServerErrors
              enabled: true
              expr: sum(rate(apiserver_request_total{job="apiserver",code=~"(?:5..)"}[1m])) by (instance, job) / sum(rate(apiserver_request_total{job="apiserver"}[1m])) by (instance, job) * 100 > 3
              for: 2m
              severity: critical
              summary: Kubernetes API server errors (instance {{ $labels.instance }})
            k32:
              alert: k32-KubernetesApiClientErrors
              enabled: true
              expr: (sum(rate(rest_client_requests_total{code=~"(4|5).."}[1m])) by (instance, job) / sum(rate(rest_client_requests_total[1m])) by (instance, job)) * 100 > 1
              for: 2m
              severity: critical
              summary: Kubernetes API client errors (instance {{ $labels.instance }})
            k33:
              alert: k33-KubernetesClientCertificateExpiresNextWeek
              enabled: true
              expr: apiserver_client_certificate_expiration_seconds_count{job="apiserver"} > 0 and histogram_quantile(0.01, sum by (job, le) (rate(apiserver_client_certificate_expiration_seconds_bucket{job="apiserver"}[5m]))) < 7*24*60*60
              for: 0m
              severity: warning
              summary: Kubernetes client certificate expires next week (instance {{ $labels.instance }})
            k34:
              alert: k34-KubernetesClientCertificateExpiresSoon
              enabled: true
              expr: apiserver_client_certificate_expiration_seconds_count{job="apiserver"} > 0 and histogram_quantile(0.01, sum by (job, le) (rate(apiserver_client_certificate_expiration_seconds_bucket{job="apiserver"}[5m]))) < 24*60*60
              for: 0m
              severity: critical
              summary: Kubernetes client certificate expires soon (instance {{ $labels.instance }})
            k35:
              alert: k35-KubernetesApiServerLatency
              enabled: true
              expr: histogram_quantile(0.99, sum(rate(apiserver_request_duration_seconds_bucket{verb!~"(?:CONNECT|WATCHLIST|WATCH|PROXY)"} [10m])) WITHOUT (subresource)) > 1
              for: 2m
              severity: warning
              summary: Kubernetes API server latency (instance {{ $labels.instance }})
        node:
          enabled: true
          rules:
            n01:
              alert: n01-NodeOutOfMemory
              enabled: true
              expr: (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes < .10)
              for: 2m
              severity: warning
              summary: node={{ $labels.node }} value={{ $value }}
            n02:
              alert: n02-NodeMemoryUnderMemoryPressure
              enabled: true
              expr: (rate(node_vmstat_pgmajfault[5m]) > 1000)
              for: 0m
              severity: warning
              summary: node={{ $labels.node }} value={{ $value }}
            n03:
              alert: n03-NodeMemoryIsUnderutilized
              enabled: true
              expr: min_over_time(node_memory_MemFree_bytes[1w]) > node_memory_MemTotal_bytes * .8
              for: 0m
              severity: info
              summary: node={{ $labels.node }} value={{ $value }}
            n04:
              alert: n04-NodeUnusualNetworkThroughputIn
              enabled: true
              expr: ((rate(node_network_receive_bytes_total[5m]) / on(instance, device) node_network_speed_bytes) > .80)
              for: 0m
              severity: warning
              summary: node={{ $labels.node }} value={{ $value }}
            n05:
              alert: n05-NodeUnusualNetworkThroughputOut
              enabled: true
              expr: ((rate(node_network_transmit_bytes_total[5m]) / on(instance, device) node_network_speed_bytes) > .80)
              for: 0m
              severity: warning
              summary: node={{ $labels.node }} value={{ $value }}
            n06:
              alert: n06-NodeUnusualDiskReadRate
              enabled: true
              expr: (rate(node_disk_io_time_seconds_total[5m]) > .80)
              for: 0m
              severity: warning
              summary: node={{ $labels.node }} value={{ $value }}
            n07:
              alert: n07-NodeOutOfDiskSpace
              enabled: true
              expr: (node_filesystem_avail_bytes{fstype!~"^(fuse.*|tmpfs|cifs|nfs)"} / node_filesystem_size_bytes < .10 and on (instance, device, mountpoint) node_filesystem_readonly == 0)
              for: 2m
              severity: critical
              summary: node={{ $labels.node }} value={{ $value }}
            n08:
              alert: n08-NodeDiskMayFillIn24Hours
              enabled: false
              expr: predict_linear(node_filesystem_avail_bytes{fstype!~"^(fuse.*|tmpfs|cifs|nfs)"}[1h], 86400) <= 0 and node_filesystem_avail_bytes > 0
              for: 2m
              severity: warning
              summary: node={{ $labels.node }} value={{ $value }}
            n09:
              alert: n09-NodeOutOfInodes
              enabled: true
              expr: (node_filesystem_files_free / node_filesystem_files < .10 and ON (instance, device, mountpoint) node_filesystem_readonly == 0)
              for: 2m
              severity: critical
              summary: node={{ $labels.node }} value={{ $value }}
            n10:
              alert: n10-NodeFilesystemDeviceError
              enabled: true
              expr: node_filesystem_device_error{fstype!~"^(fuse.*|tmpfs|cifs|nfs)"} == 1
              for: 2m
              severity: critical
              summary: node={{ $labels.node }} value={{ $value }}
            n11:
              alert: n11-NodeInodesMayFillIn24Hours
              enabled: false
              expr: predict_linear(node_filesystem_files_free{fstype!~"^(fuse.*|tmpfs|cifs|nfs)"}[1h], 86400) <= 0 and node_filesystem_files_free > 0
              for: 2m
              severity: warning
              summary: node={{ $labels.node }} value={{ $value }}
            n12:
              alert: n12-NodeUnusualDiskReadLatency
              enabled: true
              expr: (rate(node_disk_read_time_seconds_total[1m]) / rate(node_disk_reads_completed_total[1m]) > 0.1 and rate(node_disk_reads_completed_total[1m]) > 0)
              for: 2m
              severity: warning
              summary: node={{ $labels.node }} value={{ $value }}
            n13:
              alert: n13-NodeUnusualDiskWriteLatency
              enabled: true
              expr: (rate(node_disk_write_time_seconds_total[1m]) / rate(node_disk_writes_completed_total[1m]) > 0.1 and rate(node_disk_writes_completed_total[1m]) > 0)
              for: 2m
              severity: warning
              summary: node={{ $labels.node }} value={{ $value }}
            n14:
              alert: n14-NodeHighCpuLoad
              enabled: true
              expr: (avg by (instance) (rate(node_cpu_seconds_total{mode!="idle"}[2m]))) > .80
              for: 10m
              severity: warning
              summary: node={{ $labels.node }} value={{ $value }}
            n15:
              alert: n15-NodeCpuIsUnderutilized
              enabled: true
              expr: (min by (instance) (rate(node_cpu_seconds_total{mode="idle"}[1h]))) > 0.8
              for: 1w
              severity: info
              summary: node={{ $labels.node }} value={{ $value }}
            n16:
              alert: n16-NodeCpuStealNoisyNeighbor
              enabled: true
              expr: avg by(instance) (rate(node_cpu_seconds_total{mode="steal"}[5m])) * 100 > 10
              for: 0m
              severity: warning
              summary: node={{ $labels.node }} value={{ $value }}
            n17:
              alert: n17-NodeCpuHighIowait
              enabled: true
              expr: avg by (instance) (rate(node_cpu_seconds_total{mode="iowait"}[5m])) > .10
              for: 0m
              severity: warning
              summary: node={{ $labels.node }} value={{ $value }}
            n18:
              alert: n18-NodeUnusualDiskIo
              enabled: true
              expr: rate(node_disk_io_time_seconds_total[5m]) > 0.8
              for: 5m
              severity: warning
              summary: node={{ $labels.node }} value={{ $value }}
            n19:
              alert: n19-NodeContextSwitchingHigh
              enabled: true
              expr: (rate(node_context_switches_total[15m])/count without(mode,cpu) (node_cpu_seconds_total{mode="idle"})) / (rate(node_context_switches_total[1d])/count without(mode,cpu) (node_cpu_seconds_total{mode="idle"})) > 2
              for: 0m
              severity: warning
              summary: node={{ $labels.node }} value={{ $value }}
            n20:
              alert: n20-NodeSwapIsFillingUp
              enabled: true
              expr: ((1 - (node_memory_SwapFree_bytes / node_memory_SwapTotal_bytes)) * 100 > 80)
              for: 2m
              severity: warning
              summary: node={{ $labels.node }} value={{ $value }}
            n21:
              alert: n21-NodeSystemdServiceCrashed
              enabled: true
              expr: (node_systemd_unit_state{state="failed"} == 1)
              for: 0m
              severity: warning
              summary: node={{ $labels.node }} value={{ $value }}
            n22:
              alert: n22-NodePhysicalComponentTooHot
              enabled: true
              expr: node_hwmon_temp_celsius > node_hwmon_temp_max_celsius
              for: 5m
              severity: warning
              summary: node={{ $labels.node }} value={{ $value }}
            n23:
              alert: n23-NodeNodeOvertemperatureAlarm
              enabled: true
              expr: ((node_hwmon_temp_crit_alarm_celsius == 1) or (node_hwmon_temp_alarm == 1))
              for: 0m
              severity: critical
              summary: node={{ $labels.node }} value={{ $value }}
            n24:
              alert: n24-NodeSoftwareRaidInsufficientDrives
              enabled: true
              expr: ((node_md_disks_required - on(device, instance) node_md_disks{state="active"}) > 0)
              for: 0m
              severity: critical
              summary: node={{ $labels.node }} value={{ $value }}
            n25:
              alert: n25-NodeSoftwareRaidDiskFailure
              enabled: true
              expr: (node_md_disks{state="failed"} > 0)
              for: 2m
              severity: warning
              summary: node={{ $labels.node }} value={{ $value }}
            n26:
              alert: n26-NodeKernelVersionDeviations
              enabled: true
              expr: changes(node_uname_info[1h]) > 0
              for: 0m
              severity: info
              summary: node={{ $labels.node }} value={{ $value }}
            n27:
              alert: n27-NodeOomKillDetected
              enabled: true
              expr: (increase(node_vmstat_oom_kill[1m]) > 0)
              for: 0m
              severity: warning
              summary: node={{ $labels.node }} value={{ $value }}
            n28:
              alert: n28-NodeEdacCorrectableErrorsDetected
              enabled: true
              expr: (increase(node_edac_correctable_errors_total[1m]) > 0)
              for: 0m
              severity: info
              summary: node={{ $labels.node }} value={{ $value }}
            n29:
              alert: n29-NodeEdacUncorrectableErrorsDetected
              enabled: true
              expr: (node_edac_uncorrectable_errors_total > 0)
              for: 0m
              severity: warning
              summary: node={{ $labels.node }} value={{ $value }}
            n30:
              alert: n30-NodeNetworkReceiveErrors
              enabled: true
              expr: (rate(node_network_receive_errs_total[2m]) / rate(node_network_receive_packets_total[2m]) > 0.01)
              for: 2m
              severity: warning
              summary: node={{ $labels.node }} value={{ $value }}
            n31:
              alert: n31-NodeNetworkTransmitErrors
              enabled: true
              expr: (rate(node_network_transmit_errs_total[2m]) / rate(node_network_transmit_packets_total[2m]) > 0.01)
              for: 2m
              severity: warning
              summary: node={{ $labels.node }} value={{ $value }}
            n32:
              alert: n32-NodeNetworkBondDegraded
              enabled: true
              expr: ((node_bonding_active - node_bonding_slaves) != 0)
              for: 2m
              severity: warning
              summary: node={{ $labels.node }} value={{ $value }}
            n33:
              alert: n33-NodeConntrackLimit
              enabled: true
              expr: (node_nf_conntrack_entries / node_nf_conntrack_entries_limit > 0.8)
              for: 5m
              severity: warning
              summary: node={{ $labels.node }} value={{ $value }}
            n34:
              alert: n34-NodeClockSkew
              enabled: true
              expr: ((node_timex_offset_seconds > 0.05 and deriv(node_timex_offset_seconds[5m]) >= 0) or (node_timex_offset_seconds < -0.05 and deriv(node_timex_offset_seconds[5m]) <= 0))
              for: 10m
              severity: warning
              summary: node={{ $labels.node }} value={{ $value }}
            n35:
              alert: n35-NodeClockNotSynchronising
              enabled: true
              expr: (min_over_time(node_timex_sync_status[1m]) == 0 and node_timex_maxerror_seconds >= 16)
              for: 2m
              severity: warning
              summary: node={{ $labels.node }} value={{ $value }}
            n36:
              alert: n36-NodeRequiresReboot
              enabled: true
              expr: (node_reboot_required > 0)
              for: 4h
              severity: info
              summary: node={{ $labels.node }} value={{ $value }}
        prometheus:
          enabled: true
          rules:
            p01:
              alert: p01-PrometheusJobMissing
              enabled: true
              expr: absent(up{job="prometheus"})
              for: 0m
              severity: warning
              summary: instance={{ $labels.instance }} value={{ $value }}
            p02:
              alert: p02-PrometheusTargetMissing
              enabled: true
              expr: up == 0
              for: 0m
              severity: critical
              summary: instance={{ $labels.instance }} value={{ $value }}
            p03:
              alert: p03-PrometheusAllTargetsMissing
              enabled: true
              expr: sum by (job) (up) == 0
              for: 0m
              severity: critical
              summary: instance={{ $labels.instance }} value={{ $value }}
            p04:
              alert: p04-PrometheusTargetMissingWithWarmupTime
              enabled: true
              expr: sum by (instance, job) ((up == 0) * on (instance) group_left(__name__) (node_time_seconds - node_boot_time_seconds > 600))
              for: 0m
              severity: critical
              summary: instance={{ $labels.instance }} value={{ $value }}
            p05:
              alert: p05-PrometheusConfigurationReloadFailure
              enabled: true
              expr: prometheus_config_last_reload_successful != 1
              for: 0m
              severity: warning
              summary: instance={{ $labels.instance }} value={{ $value }}
            p06:
              alert: p06-PrometheusTooManyRestarts
              enabled: true
              expr: changes(process_start_time_seconds{job=~"prometheus|pushgateway|alertmanager"}[15m]) > 2
              for: 0m
              severity: warning
              summary: instance={{ $labels.instance }} value={{ $value }}
            p07:
              alert: p07-PrometheusAlertmanagerJobMissing
              enabled: true
              expr: absent(up{job="alertmanager"})
              for: 0m
              severity: warning
              summary: instance={{ $labels.instance }} value={{ $value }}
            p08:
              alert: p08-PrometheusAlertmanagerConfigurationReloadFailure
              enabled: true
              expr: alertmanager_config_last_reload_successful != 1
              for: 0m
              severity: warning
              summary: instance={{ $labels.instance }} value={{ $value }}
            p09:
              alert: p09-PrometheusAlertmanagerConfigNotSynced
              enabled: true
              expr: count(count_values("config_hash", alertmanager_config_hash)) > 1
              for: 0m
              severity: warning
              summary: instance={{ $labels.instance }} value={{ $value }}
            p10:
              alert: p10-PrometheusAlertmanagerE2eDeadManSwitch
              enabled: true
              expr: vector(1)
              for: 0m
              severity: critical
              summary: instance={{ $labels.instance }} value={{ $value }}
            p11:
              alert: p11-PrometheusNotConnectedToAlertmanager
              enabled: true
              expr: prometheus_notifications_alertmanagers_discovered < 1
              for: 0m
              severity: critical
              summary: instance={{ $labels.instance }} value={{ $value }}
            p12:
              alert: p12-PrometheusRuleEvaluationFailures
              enabled: true
              expr: increase(prometheus_rule_evaluation_failures_total[3m]) > 0
              for: 0m
              severity: critical
              summary: instance={{ $labels.instance }} value={{ $value }}
            p13:
              alert: p13-PrometheusTemplateTextExpansionFailures
              enabled: true
              expr: increase(prometheus_template_text_expansion_failures_total[3m]) > 0
              for: 0m
              severity: critical
              summary: instance={{ $labels.instance }} value={{ $value }}
            p14:
              alert: p14-PrometheusRuleEvaluationSlow
              enabled: true
              expr: prometheus_rule_group_last_duration_seconds > prometheus_rule_group_interval_seconds
              for: 5m
              severity: warning
              summary: instance={{ $labels.instance }} value={{ $value }}
            p15:
              alert: p15-PrometheusNotificationsBacklog
              enabled: true
              expr: min_over_time(prometheus_notifications_queue_length[10m]) > 0
              for: 0m
              severity: warning
              summary: instance={{ $labels.instance }} value={{ $value }}
            p16:
              alert: p16-PrometheusAlertmanagerNotificationFailing
              enabled: true
              expr: rate(alertmanager_notifications_failed_total[1m]) > 0
              for: 0m
              severity: critical
              summary: instance={{ $labels.instance }} value={{ $value }}
            p17:
              alert: p17-PrometheusTargetEmpty
              enabled: true
              expr: prometheus_sd_discovered_targets == 0
              for: 0m
              severity: critical
              summary: instance={{ $labels.instance }} value={{ $value }}
            p18:
              alert: p18-PrometheusTargetScrapingSlow
              enabled: true
              expr: prometheus_target_interval_length_seconds{quantile="0.9"} / on (interval, instance, job) prometheus_target_interval_length_seconds{quantile="0.5"} > 1.05
              for: 5m
              severity: warning
              summary: instance={{ $labels.instance }} value={{ $value }}
            p19:
              alert: p19-PrometheusLargeScrape
              enabled: true
              expr: increase(prometheus_target_scrapes_exceeded_sample_limit_total[10m]) > 10
              for: 5m
              severity: warning
              summary: instance={{ $labels.instance }} value={{ $value }}
            p20:
              alert: p20-PrometheusTargetScrapeDuplicate
              enabled: true
              expr: increase(prometheus_target_scrapes_sample_duplicate_timestamp_total[5m]) > 0
              for: 0m
              severity: warning
              summary: instance={{ $labels.instance }} value={{ $value }}
            p21:
              alert: p21-PrometheusTsdbCheckpointCreationFailures
              enabled: true
              expr: increase(prometheus_tsdb_checkpoint_creations_failed_total[1m]) > 0
              for: 0m
              severity: critical
              summary: instance={{ $labels.instance }} value={{ $value }}
            p22:
              alert: p22-PrometheusTsdbCheckpointDeletionFailures
              enabled: true
              expr: increase(prometheus_tsdb_checkpoint_deletions_failed_total[1m]) > 0
              for: 0m
              severity: critical
              summary: instance={{ $labels.instance }} value={{ $value }}
            p23:
              alert: p23-PrometheusTsdbCompactionsFailed
              enabled: true
              expr: increase(prometheus_tsdb_compactions_failed_total[1m]) > 0
              for: 0m
              severity: critical
              summary: instance={{ $labels.instance }} value={{ $value }}
            p24:
              alert: p24-PrometheusTsdbHeadTruncationsFailed
              enabled: true
              expr: increase(prometheus_tsdb_head_truncations_failed_total[1m]) > 0
              for: 0m
              severity: critical
              summary: instance={{ $labels.instance }} value={{ $value }}
            p25:
              alert: p25-PrometheusTsdbReloadFailures
              enabled: true
              expr: increase(prometheus_tsdb_reloads_failures_total[1m]) > 0
              for: 0m
              severity: critical
              summary: instance={{ $labels.instance }} value={{ $value }}
            p26:
              alert: p26-PrometheusTsdbWalCorruptions
              enabled: true
              expr: increase(prometheus_tsdb_wal_corruptions_total[1m]) > 0
              for: 0m
              severity: critical
              summary: instance={{ $labels.instance }} value={{ $value }}
            p27:
              alert: p27-PrometheusTsdbWalTruncationsFailed
              enabled: true
              expr: increase(prometheus_tsdb_wal_truncations_failed_total[1m]) > 0
              for: 0m
              severity: critical
              summary: instance={{ $labels.instance }} value={{ $value }}
            p28:
              alert: p28-PrometheusTimeseriesCardinality
              enabled: true
              expr: label_replace(count by(__name__) ({__name__=~".+"}), "name", "$1", "__name__", "(.+)") > 10000
              for: 0m
              severity: warning
              summary: instance={{ $labels.instance }} value={{ $value }}
