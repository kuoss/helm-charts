{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "type": "object",
    "properties": {
      "global": {
        "type": "object",
        "properties": {
          "imageRepository": {
            "type": "string",
            "default": "ghcr.io/kuoss"
          }
        }
      },
      "fluent-bit": {
        "kind": {
          "type": "string",
          "enum": [
            "DaemonSet",
            "Deployment"
          ],
          "description": "The type of Kubernetes object to create (DaemonSet or Deployment)."
        },
        "replicaCount": {
          "type": "integer",
          "minimum": 1,
          "description": "The number of replicas for the Deployment, only applicable if kind=Deployment."
        },
        "image": {
          "type": "object",
          "properties": {
            "repository": {
              "type": "string",
              "description": "Image repository for fluent-bit."
            },
            "tag": {
              "type": [
                "string",
                "null"
              ],
              "description": "Tag of the image to pull. Set to '-' to not use the default value."
            },
            "digest": {
              "type": [
                "string",
                "null"
              ],
              "description": "Digest of the image."
            },
            "pullPolicy": {
              "type": "string",
              "enum": [
                "Always",
                "IfNotPresent",
                "Never"
              ],
              "description": "Image pull policy."
            }
          },
          "required": [
            "repository"
          ]
        },
        "testFramework": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Whether to enable test framework."
            },
            "namespace": {
              "type": [
                "string",
                "null"
              ],
              "description": "Namespace for the test framework."
            },
            "image": {
              "type": "object",
              "properties": {
                "repository": {
                  "type": "string",
                  "description": "Image repository for test framework."
                },
                "pullPolicy": {
                  "type": "string",
                  "enum": [
                    "Always",
                    "IfNotPresent",
                    "Never"
                  ],
                  "description": "Image pull policy."
                },
                "tag": {
                  "type": "string",
                  "description": "Tag of the test framework image."
                },
                "digest": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Digest of the image."
                }
              },
              "required": [
                "repository",
                "tag"
              ]
            }
          },
          "required": [
            "enabled",
            "image"
          ]
        },
        "imagePullSecrets": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of secret names for pulling images."
        },
        "serviceAccount": {
          "type": "object",
          "properties": {
            "create": {
              "type": "boolean",
              "description": "Whether to create a new service account."
            },
            "annotations": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Annotations for the service account."
            },
            "name": {
              "type": [
                "string",
                "null"
              ],
              "description": "Name of the service account. If not set, a name will be generated."
            }
          },
          "required": [
            "create"
          ]
        },
        "rbac": {
          "type": "object",
          "properties": {
            "create": {
              "type": "boolean",
              "description": "Whether to create RBAC resources."
            },
            "nodeAccess": {
              "type": "boolean",
              "description": "Whether to allow access to node resources."
            },
            "eventsAccess": {
              "type": "boolean",
              "description": "Whether to allow access to events."
            }
          },
          "required": [
            "create"
          ]
        },
        "podSecurityPolicy": {
          "type": "object",
          "properties": {
            "create": {
              "type": "boolean",
              "description": "Whether to create PodSecurityPolicy resources."
            },
            "annotations": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Annotations for the PodSecurityPolicy."
            }
          },
          "required": [
            "create"
          ]
        },
        "openShift": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Whether to enable OpenShift specific configurations."
            },
            "securityContextConstraints": {
              "type": "object",
              "properties": {
                "create": {
                  "type": "boolean",
                  "description": "Whether to create security context constraints."
                },
                "name": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Name of the security context constraints."
                },
                "annotations": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Annotations for the security context constraints."
                },
                "existingName": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Use existing security context constraints."
                }
              },
              "required": [
                "create"
              ]
            }
          }
        },
        "hostNetwork": {
          "type": "boolean",
          "description": "Whether to enable host networking."
        },
        "dnsPolicy": {
          "type": "string",
          "enum": [
            "ClusterFirst",
            "Default",
            "ClusterFirstWithHostNet",
            "None"
          ],
          "description": "DNS policy for the pods."
        },
        "securityContext": {
          "type": "object",
          "description": "Security context for the pod.",
          "properties": {
            "runAsNonRoot": {
              "type": "boolean",
              "description": "Whether to run the container as a non-root user."
            },
            "readOnlyRootFilesystem": {
              "type": "boolean",
              "description": "Whether to mount the root filesystem as read-only."
            }
          }
        },
        "service": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "ClusterIP",
                "NodePort",
                "LoadBalancer"
              ],
              "description": "Type of the Kubernetes service."
            },
            "port": {
              "type": "integer",
              "minimum": 1,
              "maximum": 65535,
              "description": "Port for the service."
            },
            "annotations": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Annotations for the service."
            },
            "externalIPs": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "ipv4"
              },
              "description": "External IPs for the service."
            }
          },
          "required": [
            "type",
            "port"
          ]
        }
      },
      "eventrouter": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "default": true
          },
          "nodeSelector": {
            "type": "object",
            "default": {}
          },
          "tolerations": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "default": []
          }
        }
      },
      "lethe": {
        "type": "object",
        "properties": {
          "automountServiceAccountToken": {
            "description": "Specifies whether to automatically mount the ServiceAccount token into the Pod's filesystem.",
            "type": "boolean",
            "default": false
          },
          "serviceAccount": {
            "description": "Contains properties related to the service account configuration.",
            "type": "object",
            "required": [
              "create"
            ],
            "properties": {
              "create": {
                "description": "Specifies whether a service account should be created.",
                "type": "boolean",
                "default": true
              },
              "annotations": {
                "description": "Annotations to add to the service account.",
                "type": "object",
                "default": {}
              },
              "name": {
                "description": "The name of the service account to use. If not set and create is true, a name is generated using the fullname template.",
                "type": "string",
                "default": ""
              }
            }
          },
          "nodeSelector": {
            "type": "object",
            "default": {}
          },
          "hostAliases": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "default": []
          },
          "dnsConfig": {
            "type": "object",
            "default": {}
          },
          "tolerations": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "default": []
          },
          "affinity": {
            "type": "object",
            "default": {}
          },
          "topologySpreadConstraints": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "default": []
          },
          "service": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean",
                "default": true
              },
              "annotations": {
                "type": "object",
                "default": {
                  "prometheus.io/path": "/api/v1/metrics/prometheus",
                  "prometheus.io/port": "2020",
                  "prometheus.io/scrape": "true"
                }
              },
              "labels": {
                "type": "object",
                "default": {}
              },
              "clusterIP": {
                "type": "string",
                "default": ""
              },
              "externalIPs": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "default": []
              },
              "loadBalancerIP": {
                "type": "string",
                "default": ""
              },
              "loadBalancerSourceRanges": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "default": []
              },
              "servicePort": {
                "type": "integer",
                "default": 80
              },
              "sessionAffinity": {
                "type": "string",
                "enum": [
                  "None",
                  "ClientIP"
                ],
                "default": "None"
              },
              "type": {
                "type": "string",
                "enum": [
                  "ClusterIP",
                  "NodePort",
                  "LoadBalancer"
                ],
                "default": "ClusterIP"
              }
            }
          },
          "ingress": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean",
                "default": false
              },
              "annotations": {
                "type": "object",
                "default": {}
              },
              "extraLabels": {
                "type": "object",
                "default": {}
              },
              "hosts": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "default": []
              },
              "path": {
                "type": "string",
                "default": "/"
              },
              "pathType": {
                "type": "string",
                "enum": [
                  "Prefix",
                  "Exact"
                ],
                "default": "Prefix"
              },
              "extraPaths": {
                "type": "array",
                "items": {
                  "type": "object"
                },
                "default": []
              },
              "tls": {
                "type": "array",
                "items": {
                  "type": "object"
                },
                "default": []
              }
            }
          },
          "extraConfigmapLabels": {
            "type": "object",
            "default": {}
          },
          "persistentVolume": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean",
                "default": true
              },
              "accessModes": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "ReadWriteOnce",
                    "ReadOnlyMany",
                    "ReadWriteMany"
                  ]
                },
                "default": [
                  "ReadWriteOnce"
                ]
              },
              "labels": {
                "type": "object",
                "default": {}
              },
              "annotations": {
                "type": "object",
                "default": {}
              },
              "existingClaim": {
                "type": "string",
                "default": ""
              },
              "mountPath": {
                "type": "string",
                "default": "/data"
              },
              "size": {
                "type": "string",
                "default": "8Gi"
              }
            }
          },
          "emptyDir": {
            "type": "object",
            "properties": {
              "sizeLimit": {
                "type": "string",
                "default": ""
              }
            }
          },
          "retention": {
            "type": "object",
            "properties": {
              "size": {
                "type": "string",
                "default": "7g"
              },
              "time": {
                "type": "string",
                "default": "15d"
              }
            }
          },
          "resources": {
            "type": "object",
            "properties": {
              "requests": {
                "type": "object",
                "properties": {
                  "cpu": {
                    "type": "string",
                    "default": "100m"
                  },
                  "memory": {
                    "type": "string",
                    "default": "100Mi"
                  }
                }
              },
              "limits": {
                "type": "object",
                "properties": {
                  "cpu": {
                    "type": "string",
                    "default": "1000m"
                  },
                  "memory": {
                    "type": "string",
                    "default": "1000Mi"
                  }
                }
              }
            }
          }
        }
      }
    }
  }