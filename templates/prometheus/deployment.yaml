apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: prometheus
  name: prometheus
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: prometheus
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        k8s-app: prometheus
    spec:
      containers:
      - args:
        - --storage.tsdb.retention.time={{ .Values.prometheus.retention.time }}
        - --config.file=/etc/config/prometheus.yml
        - --storage.tsdb.path=/data
        - --web.console.libraries=/etc/prometheus/console_libraries
        - --web.console.templates=/etc/prometheus/consoles
        - --web.enable-lifecycle
        - --enable-feature=expand-external-labels
        - --storage.tsdb.no-lockfile
        - --storage.tsdb.retention.size={{ .Values.prometheus.retention.size }}
        env:
        - name: MY_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: {{ include "prometheus.imageRepository" . }}/prometheus:v2.36.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /-/healthy
            port: 9090
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 10
        name: prometheus
        ports:
        - containerPort: 9090
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /-/ready
            port: 9090
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 4
        resources:
          {{- toYaml .Values.prometheus.resources | nindent 10 }}
        volumeMounts:
        - mountPath: /etc/config
          name: vol-config
        - mountPath: /data
          name: vol-data
          subPath: ""
        - mountPath: /alert-rules
          name: vol-alert
      nodeSelector:
        kubernetes.io/os: linux
      securityContext:
        fsGroup: 65534
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccountName: prometheus
      terminationGracePeriodSeconds: 300
      volumes:
      - configMap:
          name: prometheus-config
        name: vol-config
      - name: vol-data
        persistentVolumeClaim:
          claimName: prometheus
      - configMap:
          name: prometheus-alert-rules
          optional: true
        name: vol-alert
